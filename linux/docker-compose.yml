version: '3.8'

services:
  # ML Training Service (background worker)
  training:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forex-ml-training
    restart: unless-stopped
    volumes:
      - ./models:/app/models
      - ./outputs:/app/outputs
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - WINDOWS_MT5_API=http://84.247.166.52:5000
      - SERVICE_MODE=training
      - TZ=Europe/Kiev
    command: python training_scheduler.py
    networks:
      - forex-net
    healthcheck:
      test: ["CMD", "python", "-c", "import os; exit(0 if os.path.exists('/app/logs/training.log') else 1)"]
      interval: 60s
      timeout: 10s
      retries: 3

  # Production API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forex-ml-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models:ro
      - ./outputs:/app/outputs:ro
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - WINDOWS_MT5_API=http://84.247.166.52:5000
      - SERVICE_MODE=api
      - TZ=Europe/Kiev
    depends_on:
      - training
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2
    networks:
      - forex-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: forex-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - forex-net
    profiles:
      - production

networks:
  forex-net:
    driver: bridge

volumes:
  models:
  outputs:
  logs:
  data:
